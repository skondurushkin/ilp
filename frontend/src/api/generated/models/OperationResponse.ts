/* tslint:disable */
/* eslint-disable */
/**
 * ILP API
 * Internal Loyalty Program API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface OperationResponse
 */
export interface OperationResponse {
    /**
     *
     * @type {string}
     * @memberof OperationResponse
     */
    type: OperationResponseTypeEnum;
    /**
     * generic identifier
     * @type {number}
     * @memberof OperationResponse
     */
    id: number;
    /**
     *
     * @type {Date}
     * @memberof OperationResponse
     */
    date: Date;
    /**
     * operation name (Activity.name for accrual and Article.name for writeOff)
     * @type {string}
     * @memberof OperationResponse
     */
    name: string;
    /**
     * generic amount
     * @type {number}
     * @memberof OperationResponse
     */
    amount: number;
}

/**
 * @export
 */
export const OperationResponseTypeEnum = {
    Accrual: 'accrual',
    WriteOff: 'writeOff',
} as const;
export type OperationResponseTypeEnum = (typeof OperationResponseTypeEnum)[keyof typeof OperationResponseTypeEnum];

/**
 * Check if a given object implements the OperationResponse interface.
 */
export function instanceOfOperationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'type' in value;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'date' in value;
    isInstance = isInstance && 'name' in value;
    isInstance = isInstance && 'amount' in value;

    return isInstance;
}

export function OperationResponseFromJSON(json: any): OperationResponse {
    return OperationResponseFromJSONTyped(json, false);
}

export function OperationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OperationResponse {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        type: json['type'],
        id: json['id'],
        date: new Date(json['date']),
        name: json['name'],
        amount: json['amount'],
    };
}

export function OperationResponseToJSON(value?: OperationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        type: value.type,
        id: value.id,
        date: value.date.toISOString().substr(0, 10),
        name: value.name,
        amount: value.amount,
    };
}
