/* tslint:disable */
/* eslint-disable */
/**
 * ILP API
 * Internal Loyalty Program API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ArticleStatisticResponse
 */
export interface ArticleStatisticResponse {
    /**
     * generic identifier
     * @type {number}
     * @memberof ArticleStatisticResponse
     */
    id: number;
    /**
     *
     * @type {string}
     * @memberof ArticleStatisticResponse
     */
    code: string;
    /**
     *
     * @type {string}
     * @memberof ArticleStatisticResponse
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof ArticleStatisticResponse
     */
    description?: string | null;
    /**
     *
     * @type {number}
     * @memberof ArticleStatisticResponse
     */
    price: number;
    /**
     *
     * @type {boolean}
     * @memberof ArticleStatisticResponse
     */
    available: boolean;
    /**
     *
     * @type {string}
     * @memberof ArticleStatisticResponse
     */
    imageLink?: string;
    /**
     *
     * @type {object}
     * @memberof ArticleStatisticResponse
     */
    extension?: object | null;
    /**
     *
     * @type {number}
     * @memberof ArticleStatisticResponse
     */
    orders: number;
}

/**
 * Check if a given object implements the ArticleStatisticResponse interface.
 */
export function instanceOfArticleStatisticResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'id' in value;
    isInstance = isInstance && 'code' in value;
    isInstance = isInstance && 'name' in value;
    isInstance = isInstance && 'price' in value;
    isInstance = isInstance && 'available' in value;
    isInstance = isInstance && 'orders' in value;

    return isInstance;
}

export function ArticleStatisticResponseFromJSON(json: any): ArticleStatisticResponse {
    return ArticleStatisticResponseFromJSONTyped(json, false);
}

export function ArticleStatisticResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): ArticleStatisticResponse {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json['id'],
        code: json['code'],
        name: json['name'],
        description: !exists(json, 'description') ? undefined : json['description'],
        price: json['price'],
        available: json['available'],
        imageLink: !exists(json, 'imageLink') ? undefined : json['imageLink'],
        extension: !exists(json, 'extension') ? undefined : json['extension'],
        orders: json['orders'],
    };
}

export function ArticleStatisticResponseToJSON(value?: ArticleStatisticResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        code: value.code,
        name: value.name,
        description: value.description,
        price: value.price,
        available: value.available,
        imageLink: value.imageLink,
        extension: value.extension,
        orders: value.orders,
    };
}
