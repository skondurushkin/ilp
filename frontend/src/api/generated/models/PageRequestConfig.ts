/* tslint:disable */
/* eslint-disable */
/**
 * ILP API
 * Internal Loyalty Program API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    PageRequestConfigFilterInnerFromJSON,
    PageRequestConfigFilterInnerFromJSONTyped,
    PageRequestConfigFilterInnerToJSON,
} from './PageRequestConfigFilterInner';
import {
    PageRequestConfigSortInnerFromJSON,
    PageRequestConfigSortInnerFromJSONTyped,
    PageRequestConfigSortInnerToJSON,
} from './PageRequestConfigSortInner';
import { exists, mapValues } from '../runtime';

import type { PageRequestConfigFilterInner } from './PageRequestConfigFilterInner';
import type { PageRequestConfigSortInner } from './PageRequestConfigSortInner';

/**
 * data extraction parameters
 * @export
 * @interface PageRequestConfig
 */
export interface PageRequestConfig {
    /**
     *
     * @type {Array<PageRequestConfigSortInner>}
     * @memberof PageRequestConfig
     */
    sort?: Array<PageRequestConfigSortInner>;
    /**
     *
     * @type {Array<PageRequestConfigFilterInner>}
     * @memberof PageRequestConfig
     */
    filter?: Array<PageRequestConfigFilterInner>;
}

/**
 * Check if a given object implements the PageRequestConfig interface.
 */
export function instanceOfPageRequestConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PageRequestConfigFromJSON(json: any): PageRequestConfig {
    return PageRequestConfigFromJSONTyped(json, false);
}

export function PageRequestConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageRequestConfig {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        sort: !exists(json, 'sort') ? undefined : (json['sort'] as Array<any>).map(PageRequestConfigSortInnerFromJSON),
        filter: !exists(json, 'filter')
            ? undefined
            : (json['filter'] as Array<any>).map(PageRequestConfigFilterInnerFromJSON),
    };
}

export function PageRequestConfigToJSON(value?: PageRequestConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        sort: value.sort === undefined ? undefined : (value.sort as Array<any>).map(PageRequestConfigSortInnerToJSON),
        filter:
            value.filter === undefined
                ? undefined
                : (value.filter as Array<any>).map(PageRequestConfigFilterInnerToJSON),
    };
}
