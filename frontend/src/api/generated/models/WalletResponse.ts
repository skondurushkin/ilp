/* tslint:disable */
/* eslint-disable */
/**
 * ILP API
 * Internal Loyalty Program API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    OperationResponseFromJSON,
    OperationResponseFromJSONTyped,
    OperationResponseToJSON,
} from './OperationResponse';
import { exists, mapValues } from '../runtime';

import type { OperationResponse } from './OperationResponse';

/**
 *
 * @export
 * @interface WalletResponse
 */
export interface WalletResponse {
    /**
     *
     * @type {number}
     * @memberof WalletResponse
     */
    balance: number;
    /**
     * generic amount
     * @type {number}
     * @memberof WalletResponse
     */
    totalEarned: number;
    /**
     * generic amount
     * @type {number}
     * @memberof WalletResponse
     */
    totalSpent: number;
    /**
     * up to 5 recent accruals
     * @type {Array<OperationResponse>}
     * @memberof WalletResponse
     */
    operations: Array<OperationResponse>;
}

/**
 * Check if a given object implements the WalletResponse interface.
 */
export function instanceOfWalletResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'balance' in value;
    isInstance = isInstance && 'totalEarned' in value;
    isInstance = isInstance && 'totalSpent' in value;
    isInstance = isInstance && 'operations' in value;

    return isInstance;
}

export function WalletResponseFromJSON(json: any): WalletResponse {
    return WalletResponseFromJSONTyped(json, false);
}

export function WalletResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletResponse {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        balance: json['balance'],
        totalEarned: json['totalEarned'],
        totalSpent: json['totalSpent'],
        operations: (json['operations'] as Array<any>).map(OperationResponseFromJSON),
    };
}

export function WalletResponseToJSON(value?: WalletResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        balance: value.balance,
        totalEarned: value.totalEarned,
        totalSpent: value.totalSpent,
        operations: (value.operations as Array<any>).map(OperationResponseToJSON),
    };
}
