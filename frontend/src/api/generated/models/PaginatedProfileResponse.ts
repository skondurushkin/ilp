/* tslint:disable */
/* eslint-disable */
/**
 * ILP API
 * Internal Loyalty Program API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ProfileResponseFromJSON, ProfileResponseFromJSONTyped, ProfileResponseToJSON } from './ProfileResponse';
import { exists, mapValues } from '../runtime';

import type { ProfileResponse } from './ProfileResponse';

/**
 *
 * @export
 * @interface PaginatedProfileResponse
 */
export interface PaginatedProfileResponse {
    /**
     *
     * @type {number}
     * @memberof PaginatedProfileResponse
     */
    total: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedProfileResponse
     */
    page: number;
    /**
     *
     * @type {number}
     * @memberof PaginatedProfileResponse
     */
    pageSize: number;
    /**
     *
     * @type {boolean}
     * @memberof PaginatedProfileResponse
     */
    hasNext: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PaginatedProfileResponse
     */
    hasPrev: boolean;
    /**
     *
     * @type {Array<ProfileResponse>}
     * @memberof PaginatedProfileResponse
     */
    results: Array<ProfileResponse>;
}

/**
 * Check if a given object implements the PaginatedProfileResponse interface.
 */
export function instanceOfPaginatedProfileResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'total' in value;
    isInstance = isInstance && 'page' in value;
    isInstance = isInstance && 'pageSize' in value;
    isInstance = isInstance && 'hasNext' in value;
    isInstance = isInstance && 'hasPrev' in value;
    isInstance = isInstance && 'results' in value;

    return isInstance;
}

export function PaginatedProfileResponseFromJSON(json: any): PaginatedProfileResponse {
    return PaginatedProfileResponseFromJSONTyped(json, false);
}

export function PaginatedProfileResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): PaginatedProfileResponse {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        total: json['total'],
        page: json['page'],
        pageSize: json['pageSize'],
        hasNext: json['hasNext'],
        hasPrev: json['hasPrev'],
        results: (json['results'] as Array<any>).map(ProfileResponseFromJSON),
    };
}

export function PaginatedProfileResponseToJSON(value?: PaginatedProfileResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        total: value.total,
        page: value.page,
        pageSize: value.pageSize,
        hasNext: value.hasNext,
        hasPrev: value.hasPrev,
        results: (value.results as Array<any>).map(ProfileResponseToJSON),
    };
}
