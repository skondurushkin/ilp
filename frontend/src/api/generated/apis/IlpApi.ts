/* tslint:disable */
/* eslint-disable */
/**
 * ILP API
 * Internal Loyalty Program API Specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';

import { GreetingFromJSON, GreetingToJSON } from '../models';

import type { Greeting } from '../models';

/**
 *
 */
export class IlpApi extends runtime.BaseAPI {
    /**
     * Say hello to the client
     */
    async sayHelloRaw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<Greeting>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request(
            {
                path: `/api/ilp/hello`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides,
        );

        return new runtime.JSONApiResponse(response, (jsonValue) => GreetingFromJSON(jsonValue));
    }

    /**
     * Say hello to the client
     */
    async sayHello(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Greeting> {
        const response = await this.sayHelloRaw(initOverrides);
        return await response.value();
    }

    /**
     * Say hello to the client
     */
    async sayHello2Raw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<Greeting>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request(
            {
                path: `/api/ilp/hello2`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides,
        );

        return new runtime.JSONApiResponse(response, (jsonValue) => GreetingFromJSON(jsonValue));
    }

    /**
     * Say hello to the client
     */
    async sayHello2(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Greeting> {
        const response = await this.sayHello2Raw(initOverrides);
        return await response.value();
    }
}
